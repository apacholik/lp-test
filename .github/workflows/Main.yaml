name: Node.js CI
on:
  push:
    branches: [ development ]
jobs:
  buildServer:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Run npm install
      run: npm ci
      working-directory: ./server/responder
    - name: Configure AWS credentials from Test account
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-1
    - name: Build AWS SAM
      run: sam build
      working-directory: ./server
    - name: deploy AWS SAM
      run: yes | sam deploy --no-fail-on-empty-changeset
      working-directory: ./server
    - name: Get API endpoint and set to env
      run: aws cloudformation describe-stacks --stack-name lp-test-backend-lambda --query "Stacks[0].Outputs[?OutputKey=='APIEndpoint'].OutputValue" --output text > apiurl.txt
    - name: Add Artifact (apiurl file)
      uses: actions/upload-artifact@v2
      with:
        name: apiurl.txt
        path: ./apiurl.txt
  buildWebsite:
    needs: buildServer
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: use cache Actions for npm
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('site/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - name: Run install
      run: npm ci
      working-directory: ./site
    - name: Get artifact from build
      uses: actions/download-artifact@v2
      with:
        name: apiurl.txt
    - name: SET API_URL to ENV
      run: cat apiurl.txt | xargs -I{} echo "API_URL={}" >> $GITHUB_ENV
    - name: Show API_URL from ENV
      run: echo "${API_URL}"
    - name: Runn build
      run: npm run build
      working-directory: ./site
    - name: Add Artifact (build)
      uses: actions/upload-artifact@v2
      with:
        name: build
        path: ./site/out
  deployWebsite:
    needs: buildWebsite
    runs-on: ubuntu-latest
    steps:
    - name: Get artifact from build
      uses: actions/download-artifact@v2
      with:
        name: build
    - name: Configure AWS credentials from Test account
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-1
    - run: ls
    - name: Copy build to S3
      run: aws s3 sync . s3://lp-test-site-200602/site --delete --acl public-read
